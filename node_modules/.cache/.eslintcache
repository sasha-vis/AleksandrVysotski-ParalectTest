[{"/Users/alex.vysocki/Desktop/Paralect-test/app/src/index.js":"1","/Users/alex.vysocki/Desktop/Paralect-test/app/src/App.js":"2","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/Nav.js":"3","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/Main.js":"4","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/common/Input.js":"5","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/mainPages/IfEmpty.js":"6","/Users/alex.vysocki/Desktop/Paralect-test/app/src/context.js":"7","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/mainPages/IfNotExists.js":"8","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/mainPages/IfExists.js":"9","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/mainPages/Repositories.js":"10","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/common/Loader.js":"11"},{"size":300,"mtime":1653233980333,"results":"12","hashOfConfig":"13"},{"size":665,"mtime":1653234139645,"results":"14","hashOfConfig":"13"},{"size":2203,"mtime":1653234493495,"results":"15","hashOfConfig":"13"},{"size":786,"mtime":1653233220237,"results":"16","hashOfConfig":"13"},{"size":238,"mtime":1652797323467,"results":"17","hashOfConfig":"13"},{"size":342,"mtime":1652796223286,"results":"18","hashOfConfig":"13"},{"size":91,"mtime":1652799968289,"results":"19","hashOfConfig":"13"},{"size":366,"mtime":1652802279567,"results":"20","hashOfConfig":"13"},{"size":2942,"mtime":1653234630267,"results":"21","hashOfConfig":"13"},{"size":4444,"mtime":1653234956321,"results":"22","hashOfConfig":"13"},{"size":99,"mtime":1653232745173,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"58vs8c",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"27"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alex.vysocki/Desktop/Paralect-test/app/src/index.js",[],[],[],"/Users/alex.vysocki/Desktop/Paralect-test/app/src/App.js",[],[],"/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/Nav.js",["63","64","65"],[],"import React, { useState, useContext } from 'react';\n\nimport logo from './../images/GitHubLogo.png';\nimport searchIconSmall from './../images/SearchIconSmall.png';\n\nimport Input from './common/Input';\n\nimport Context from './../context.js';\n\nfunction Nav(){\n\n    // this token for github\n    const token = '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';\n\n    const {userData, setUserData} = useContext(Context);\n    const {ifLoad, setIfLoad} = useContext(Context);\n\n    const [inputValue, setInputValue] = useState('');\n\n    // Change input value function\n    function handleChange(value){\n        setInputValue(value);\n    }\n\n    // Event function for searh field when we use Enter\n    function onKeyUpHandler(event){\n        if (event.keyCode === 13) {\n            getUserData(inputValue);\n        }\n    }\n\n    // Function for getting users data\n    async function getUserData(username) {\n\n        // Start loader\n        setIfLoad(true);\n        \n        fetch(`https://api.github.com/users/${username}`, {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        })\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            // Stop loader\n            setIfLoad(false);\n            // Change users state\n            if (inputValue === '') return setUserData(null);\n            setUserData(data);\n        });\n    }\n\n    return(\n        <nav className=\"nav\">\n            <div className=\"container\">\n                <div className=\"nav-wrapper\">\n                    <div className=\"logo-block\">\n                        <img src={logo} alt=\"Logo image\"></img>\n                    </div>\n                    <div className=\"search-block\">\n                        <img src={searchIconSmall} alt=\"Search icon\"></img>\n                        <Input value={inputValue} onChange={(event) => handleChange(event.target.value)} onKeyUp={onKeyUpHandler} className=\"search-field\" type=\"text\" placeholder=\"Enter GitHub username\" />\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Nav;","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/Main.js",["66"],[],"import React, { useState, useContext } from 'react';\nimport Context from './../context.js';\n\nimport IfEmpty from './mainPages/IfEmpty.js';\nimport IfExists from './mainPages/IfExists.js';\nimport IfNotExists from './mainPages/IfNotExists.js';\n\nimport Loader from './common/Loader.js';\n\nfunction Main(){\n\n    const {userData} = useContext(Context);\n    const {ifLoad} = useContext(Context);\n\n    return(\n        <main className=\"main\">\n            <div className=\"container\">\n                <div className=\"main-wrapper\">\n                    {userData === null ? <IfEmpty /> : (userData.message === undefined ? <IfExists /> : <IfNotExists />)}\n                    {ifLoad === true ? <Loader /> : ''}\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default Main;","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/common/Input.js",[],[],[],"/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/mainPages/IfEmpty.js",[],[],"/Users/alex.vysocki/Desktop/Paralect-test/app/src/context.js",[],[],"/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/mainPages/IfNotExists.js",[],[],"/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/mainPages/IfExists.js",["67","68","69","70","71","72","73","74","75","76"],[],"import React, { useContext } from 'react';\n\nimport Context from './../../context.js';\n\nimport followers from './../../images/followers.png';\nimport following from './../../images/following.png';\n\nimport NoRepos from './../../images/NoRepos.png';\n\nimport Repositories from './Repositories.js';\n\nfunction IfExists(){\n\n    const {userData} = useContext(Context);\n\n    // Actions to create 'k' symbol when count of followes or following more then 1000\n\n    let followersString = String(userData.followers);\n    let followingString = String(userData.following);\n\n    if(followingString.length == 4) {\n        if(followingString[1] == 0) {\n            followingString = followingString[0] + 'k';\n        } else {\n            followingString = followingString[0] + '.' + followingString[1] + 'k';\n        }\n    } else if (followingString.length == 5) {\n        if(followingString[2] == 0) {\n            followingString = followingString[0] + followingString[1] + 'k';\n        } else {\n            followingString = followingString[0] + followingString[1] + '.' + followingString[2] + 'k';\n        }\n    }\n\n    if(followersString.length == 4) {\n        if(followersString[1] == 0) {\n            followersString = followersString[0] + 'k';\n        } else {\n            followersString = followersString[0] + '.' + followersString[1] + 'k';\n        }\n    } else if (followersString.length == 5) {\n        if(followersString[2] == 0) {\n            followersString = followersString[0] + followersString[1] + 'k';\n        } else {\n            followersString = followersString[0] + followersString[1] + '.' + followersString[2] + 'k';\n        }\n    }\n\n    return(\n        <div className=\"if_exists\">\n            <div className='info'>\n                <img src={userData.avatar_url}></img>\n                <div className='name'>{userData.name}</div>\n                <a href={userData.html_url} target='_blank' >{userData.login}</a>\n                <div className='follow-block'>\n                    <div>\n                        <img src={followers} alt='Followers icon'></img>\n                        <span>{followersString} followers</span>\n                    </div>\n                    <div>\n                        <img src={following} alt='Following icon'></img>\n                        <span>{userData.following} following</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"repos-block\">\n                {userData.public_repos !== 0 ? <Repositories username={userData.login} countRepos={userData.public_repos} /> : \n                    <div className='no-repos'>\n                        <img className=\"not-repos-img\" src={NoRepos} alt=\"No repositories icon\"></img>\n                        <p className=\"text-block\">\n                            Repository list is empty\n                        </p>\n                    </div>}\n            </div>\n        </div>\n    );\n}\n\nexport default IfExists;","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/mainPages/Repositories.js",["77","78","79","80","81","82","83","84"],[],"import React,{ useEffect, useState, useContext } from \"react\";\nimport Context from './../../context.js';\n\nfunction Repositories(props){\n    // default settings\n    const token = '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';\n    const {userData, setUserData} = useContext(Context);\n    const {ifLoad, setIfLoad} = useContext(Context);\n\n    const reposPerPage = 4;\n    const pagesCount = Math.ceil(props.countRepos / reposPerPage);\n    const pagesCountArr = [];\n    for (let i = 1; i <= pagesCount; i++){\n        pagesCountArr.push(i);\n    }\n    \n    const [currentPage, setCurrentPage] = useState(1);\n    const [reposData, setReposData] = useState([]);\n\n    useEffect(() => {\n        getReposData();\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [userData]);\n\n    useEffect(() => {\n        getReposData();\n    }, [currentPage]);\n\n    // Function for getting repositories data of user\n    async function getReposData() {\n\n        setIfLoad(true);\n\n        fetch(`https://api.github.com/users/${props.username}/repos?per_page=${reposPerPage}&page=${currentPage}`, {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n            }\n        })\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            setIfLoad(false);\n            setReposData(data);\n        });\n    }\n\n    // Function for next request when we use arrows\n    function nextRequest(btn){\n        if (btn.closest('div').id === 'next-page-btn' && currentPage < pagesCount) {\n            setCurrentPage(+currentPage+1);\n        } else if (btn.closest('div').id === 'previous-page-btn' && currentPage > 1) {\n            setCurrentPage(+currentPage-1);\n        }\n    }\n\n    // Function for next request when we use pages buttons (1, 2, 3, 4, ...)\n    function changePage(btn){\n        setCurrentPage(btn.closest('li').innerHTML);\n    }\n\n    return(\n        <div className=\"repositories\">\n            <h3>Repositories ({props.countRepos})</h3>\n            <ul className=\"repos-list\">\n                {reposData.map((item, index) =>\n                    <li key={index}>\n                        <a href={item.html_url} target=\"_blank\" className=\"repo-title\">{item.name}</a>\n                        <p className=\"repo-desc\">{item.description}</p>\n                    </li>)}\n            </ul>\n            <div className=\"margin-block\"></div>\n            <div className=\"controllers\">\n                <div>{currentPage*reposPerPage-(reposPerPage-1)}-{currentPage*reposPerPage>props.countRepos ? props.countRepos : currentPage*reposPerPage} of {props.countRepos} items</div>\n                <div className=\"controllers-nav\">\n                    <div id=\"previous-page-btn\" className=\"arrow-left\" onClick={(event) => nextRequest(event.target)}><span></span></div>\n                    {/* This ul with pages need if user have maximum 5 repositories, but I dont test this, maybe my application will work and without it */}\n                    {pagesCount <= 5 ? \n                    <ul>\n                        {pagesCountArr.map((item, index) =>\n                        <li key={index}>\n                            {item}\n                        </li>)}\n                    </ul> : \n                    <ul>\n                        {/* My interesting pagination... */}\n                        {pagesCountArr.map((item, index) => {\n                            return (+item - currentPage <= 1 && (currentPage - +item <= 1)) || (+item === pagesCount || +item === 1) ?\n                            <li className={currentPage == item ? 'current-page' : ''} key={index} data-id={index} onClick={(event) => changePage(event.target)}>\n                                {item}\n                            </li> : (document.querySelector(`li[data-id=\"${index-1}\"]`) != null && (document.querySelector(`li[data-id=\"${index-1}\"]`).innerHTML == '...' || document.querySelector(`li[data-id=\"${index-1}\"]`).innerHTML == '') ? <li className=\"empty-li\" key={index} data-id={index}></li> : <li className=\"spots\" key={index} data-id={index}>...</li>)\n                        })}\n                    </ul>}\n                    <div id=\"next-page-btn\" className=\"arrow-right\" onClick={(event) => nextRequest(event.target)}><span></span></div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Repositories;","/Users/alex.vysocki/Desktop/Paralect-test/app/src/components/common/Loader.js",[],[],{"ruleId":"85","severity":1,"message":"86","line":15,"column":12,"nodeType":"87","messageId":"88","endLine":15,"endColumn":20},{"ruleId":"85","severity":1,"message":"89","line":16,"column":12,"nodeType":"87","messageId":"88","endLine":16,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":62,"column":25,"nodeType":"92","endLine":62,"endColumn":58},{"ruleId":"85","severity":1,"message":"93","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":21,"column":31,"nodeType":"96","messageId":"97","endLine":21,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":22,"column":31,"nodeType":"96","messageId":"97","endLine":22,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":27,"column":39,"nodeType":"96","messageId":"97","endLine":27,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":28,"column":31,"nodeType":"96","messageId":"97","endLine":28,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":35,"column":31,"nodeType":"96","messageId":"97","endLine":35,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":36,"column":31,"nodeType":"96","messageId":"97","endLine":36,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":41,"column":39,"nodeType":"96","messageId":"97","endLine":41,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":42,"column":31,"nodeType":"96","messageId":"97","endLine":42,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":52,"column":17,"nodeType":"92","endLine":52,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":54,"column":17,"nodeType":"92","messageId":"102","endLine":54,"endColumn":62,"fix":"103"},{"ruleId":"85","severity":1,"message":"104","line":7,"column":22,"nodeType":"87","messageId":"88","endLine":7,"endColumn":33},{"ruleId":"85","severity":1,"message":"89","line":8,"column":12,"nodeType":"87","messageId":"88","endLine":8,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":22,"column":8,"nodeType":"107","endLine":22,"endColumn":10,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"106","line":30,"column":8,"nodeType":"107","endLine":30,"endColumn":21,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"101","line":73,"column":25,"nodeType":"92","messageId":"102","endLine":73,"endColumn":88,"fix":"110"},{"ruleId":"94","severity":1,"message":"95","line":94,"column":56,"nodeType":"96","messageId":"97","endLine":94,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":96,"column":162,"nodeType":"96","messageId":"97","endLine":96,"endColumn":164},{"ruleId":"94","severity":1,"message":"95","line":96,"column":235,"nodeType":"96","messageId":"97","endLine":96,"endColumn":237},"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","'ifLoad' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"111","text":"112"},"'setUserData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getReposData'. Either include it or remove the dependency array.","ArrayExpression",["113"],["114"],{"range":"115","text":"112"},[1896,1896]," rel=\"noreferrer\"",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},[2290,2290],"Update the dependencies array to be: [getReposData]",{"range":"120","text":"121"},"Update the dependencies array to be: [currentPage, getReposData]",{"range":"122","text":"123"},[704,706],"[getReposData]",[833,846],"[currentPage, getReposData]"]